import json
import cv2
import face_recognition
import numpy as np
from tqdm import tqdm

# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ json —Ñ–∞–π–ª–∞
with open('result.json', 'r', encoding='utf-8') as json_file:
    messages = json.load(json_file)["messages"]

all_profiles = []

# –∑–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –∞–Ω–∫–µ—Ç
for message in messages:

    # –ø—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç–æ–π
    is_profile = message["from"] == "–î–∞–π–≤–∏–Ω—á–∏–∫ | Leomatchbot" and "photo" in message and message["text"] != ''

    # –µ—Å–ª–∏ —ç—Ç–æ –∞–Ω–∫–µ—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤
    if is_profile:
        # —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–æ—è –∞–Ω–∫–µ—Ç–∞)
        if "–ü–∞–≤–µ–ª" in message["text"]:
            continue

        data = {
            "photo": message["photo"],
            "description": message["text"],
            "label": 0
        }
        all_profiles.append(data)

    # –ø—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–æ–π –∞–Ω–∫–µ—Ç—ã
    is_estimation = message["from"] == "–ü–∞–≤–µ–ª" and (message["text"] == "üëé" or message["text"] == "‚ù§Ô∏è")

    # –µ—Å–ª–∏ —ç—Ç–æ –æ—Ü–µ–Ω–∫–∞, —Ç–æ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ–º –µ—ë –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–Ω–∫–µ—Ç–µ
    if is_estimation:
        last_elem = len(all_profiles) - 1
        if message["text"] == "üëé":
            all_profiles[last_elem]["label"] = 0
        else:
            all_profiles[last_elem]["label"] = 1

vectors = []

# –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø—Ä–æ—Ñ–∏–ª—è–º –∏–∑ –º–∞—Å—Å–∏–≤–∞
for profile in tqdm(all_profiles):

    age = 0

    # –ø–æ–ª—É—á–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è, –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å, —Ç–æ —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –∑–∞ 0
    if isinstance(profile["description"], str) and profile["description"].split()[1][:-1].isdigit():
        age = int(profile["description"].split()[1][:-1])

    # –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å—Ç–∞—Ä—à–µ 18 –∏ —Å –æ—Ü–µ–Ω–∫–æ–π "–ª–∞–π–∫"
    if profile["label"] == 1 and age >= 18:

        # —Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ø—Ä–æ—Ñ–∏–ª—è
        img = cv2.imread(profile["photo"])

        # –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≤–µ–∫—Ç–æ—Ä –ª–∏—Ü–∞
        try:
            vector = face_recognition.face_encodings(img)[0]
        except IndexError:
            continue

        # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä –≤ –º–∞—Å—Å–∏–≤ –≤–µ–∫—Ç–æ—Ä–æ–≤
        vectors.append(vector)


# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤–µ–∫—Ç–æ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
vectors = np.array(vectors)
np.save("vectors", vectors)